// Generated by CoffeeScript 1.7.1
(function() {
  var FetchKa, FetchKaConsumer, FetchKaHandler, FetchKaRouting, consumer, databases, db, driver, driverService, email, emailService, payment, payments, routing;

  FetchKa = require("../fetchka");

  FetchKaRouting = FetchKa.FetchKaRouting;

  FetchKaHandler = FetchKa.FetchKaHandler;

  FetchKaConsumer = FetchKa.FetchKaConsumer;

  databases = {
    save: function(data) {
      return console.log("Saving", data);
    }
  };

  payments = {
    charge: function(data) {
      return console.log("Charging", data);
    }
  };

  emailService = {
    send: function(data) {
      return console.log("Sending email to", data);
    }
  };

  driverService = {
    find: function(data) {
      return console.log("Finding a driver for", data);
    }
  };

  db = FetchKaHandler.Builder().set({
    topic: "orders",
    onMessage: (function(data) {
      return databases.save(data);
    }),
    onError: (function(err) {
      return LOG.error(err);
    })
  }).build();

  payment = FetchKaHandler.Builder().set({
    topic: "orders",
    onMessage: (function(data) {
      return payments.charge(data);
    }),
    onError: (function(err) {
      return LOG.error(err);
    })
  }).build();

  email = FetchKaHandler.Builder().set({
    onMessage: (function(data) {
      return emailService.send(data);
    }),
    onError: (function(err) {
      return LOG.error(err);
    })
  }).build();

  driver = FetchKaHandler.Builder().set({
    onMessage: (function(data) {
      return driverService.find(data);
    }),
    onError: (function(err) {
      return LOG.error(err);
    })
  }).build();

  routing = FetchKaRouting.Builder("orders").routing([db, [email, [payment, driver]]]).build();

  consumer = new FetchKaConsumer.Builder().addTopic("orders").connectString("localhost:2181").build();

  consumer.register(routing).start();

}).call(this);
