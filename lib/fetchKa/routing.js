// Generated by CoffeeScript 1.7.1
(function() {
  var FetchKaProxy, FetchKaRouting, log4js;

  log4js = require("log4js");

  FetchKaProxy = (function() {
    var LOG;

    LOG = log4js.getLogger("FetchKaProxy");

    function FetchKaProxy(handler) {
      this.handler = handler;
      this.topic = this.handler.topic;
      this.name = this.handler.name;
    }

    FetchKaProxy.prototype.onMessage = function(message) {
      return this.handler.onMessage(message);
    };

    return FetchKaProxy;

  })();

  exports.FetchKaRouting = FetchKaRouting = (function() {
    var InnerBuilder, LOG;

    LOG = log4js.getLogger("FetchKaRouting");

    InnerBuilder = (function() {
      function InnerBuilder(_topic) {
        this._topic = _topic;
        this._parent = void 0;
        this;
      }

      InnerBuilder.prototype.routing = function(route) {
        this.route = route;
        return this;
      };

      InnerBuilder.prototype.parent = function(_parent) {
        this._parent = _parent;
        return this;
      };

      InnerBuilder.prototype.build = function() {
        var routing;
        routing = new FetchKaRouting(this._topic, this._parent);
        routing.addRouting(this.route);
        return routing;
      };

      return InnerBuilder;

    })();

    FetchKaRouting.Builder = function(topic) {
      return new InnerBuilder(topic);
    };

    function FetchKaRouting(topic, parent, errorHandler) {
      this.topic = topic;
      this.parent = parent;
      this.level = [];
      if (errorHandler) {
        this.errorHandler = errorHandler;
      } else {
        this.errorHandler = LOG.error.bind(LOG);
      }
    }

    FetchKaRouting.prototype.addRouting = function(route) {
      var s, subLevel, _i, _len, _results;
      this.level = (route.filter(function(r) {
        return !(r instanceof Array);
      })).map(function(r) {
        return new FetchKaProxy(r);
      });
      subLevel = route.filter(function(r) {
        return r instanceof Array;
      });
      this.next = [];
      _results = [];
      for (_i = 0, _len = subLevel.length; _i < _len; _i++) {
        s = subLevel[_i];
        _results.push(this.next.push(new FetchKaRouting.Builder(this.topic).routing(s).parent(this).build()));
      }
      return _results;
    };

    FetchKaRouting.prototype.onMessage = function(message) {
      var e, l, n, _i, _j, _len, _len1, _ref, _ref1, _results;
      try {
        _ref = this.level;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          l = _ref[_i];
          if (l.topic === "*" || this.topic === l.topic) {
            l.onMessage(message);
          }
        }
        _ref1 = this.next;
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          n = _ref1[_j];
          if (n.topic === "*" || this.topic === n.topic) {
            _results.push(n.onMessage(message));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      } catch (_error) {
        e = _error;
        return this._onError(e);
      }
    };

    FetchKaRouting.prototype._onError = function(error) {
      if (this.parent) {
        return this.parent._onError(error);
      } else {
        return this.errorHandler(error);
      }
    };

    return FetchKaRouting;

  })();

}).call(this);
